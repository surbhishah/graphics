import fillAlgorithms.BoundaryFillAlgorithm;
import graphics.Point;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;

import javax.swing.JApplet;

@SuppressWarnings("serial")
public class FillApplet extends JApplet {
	@Override
	public void paint(Graphics g) {
		try {
			// Center of the coordinate system
			Point coordinateCenter = new Point(400, 400);
			Point vertices[] = new Point[3];
			// These vertices are with respect to the center of coordinate
			// center defined above
			vertices[0] = new Point(-5, 5);
			vertices[1] = new Point(5, 0);
			vertices[2] = new Point(0, -5);
			Point startingPoint = new Point(0, 0);
			Color boundaryColor = Color.BLACK;
			Color fillColor = Color.GREEN;
			int xPoints[] = new int[vertices.length];
			int yPoints[] = new int[vertices.length];
			Point translated[] = new Point[vertices.length];
			for (int i = 0; i < vertices.length; i++) {
				translated[i] = vertices[i].translate(coordinateCenter);
				xPoints[i] = translated[i].x;
				yPoints[i] = translated[i].y;
			}

			BufferedImage img = new BufferedImage(this.getWidth(),
					this.getHeight(), BufferedImage.TYPE_INT_RGB);
			Graphics2D g2D = img.createGraphics();
			g2D.setColor(Color.WHITE);
			g2D.fillRect(0, 0, this.getWidth(), this.getHeight());
			g2D.setColor(Color.RED);
			g2D.drawPolygon(xPoints, yPoints, 3);

			startingPoint = startingPoint.translate(coordinateCenter);
			BoundaryFillAlgorithm algo = new BoundaryFillAlgorithm();
			algo.fill(img, startingPoint.x, startingPoint.y, fillColor,
					boundaryColor);
			g.drawImage(img, 0, 0, this.getWidth(), this.getHeight(), 0, 0,
					this.getWidth(), this.getHeight(), null);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}

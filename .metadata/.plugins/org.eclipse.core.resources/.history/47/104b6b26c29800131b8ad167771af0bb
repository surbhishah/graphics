package algorithms;

import graphics.Point;

import java.awt.Color;
import java.awt.Graphics;

import circle.Circle;

public class DirectEquationUse implements CircleDrawingAlgorithm {

	@Override
	public void drawCircle(Circle circle, Graphics g, Point coordinateCenter) {
		int radius = circle.getRadius();
		Point center = circle.getCenter();
		int x, y;
		Point point = new Point();
		for (x = 0; x <= radius / 1.414; x++) {
			y = getY(circle, x);
			// 1st half quadrant
			point.x = x;
			point.y = y;
			point.translateAndDrawPoint(g, coordinateCenter, Color.BLUE);
			// 2nd half quadrant
			point.x = y;
			point.y = x;
			point.translateAndDrawPoint(g, coordinateCenter, Color.BLUE);
			// 3rd half quadrant
			point.x = y;
			point.y = -x;
			point.translateAndDrawPoint(g, coordinateCenter, Color.BLUE);
			// 4th half quadrant
			point.x = x;
			point.y = -y;
			point.translateAndDrawPoint(g, coordinateCenter, Color.BLUE);
			// 5th half quadrant
			point.x = x;
			point.y = -y;
			point.translateAndDrawPoint(g, coordinateCenter, Color.BLUE);

		}
	}

	private int getY(Circle circle, int x) {
		int radius_square = (int) Math.pow(circle.getRadius(), 2);
		return (int) (circle.getCenter().y + Math.round(Math.sqrt(radius_square
				- Math.round(Math.pow(circle.getCenter().x - x, 2)))));
	}
}
